1. 字符串命令
	注意：
		a. 字符串可以是 字符串、数字、图片、序列化的对象
		b. 如果字符串是多个单词必须打 “” 引起来
		c. 字符串是以二进制形式存储，在命令行不建议写中文
		
	1) 设置值
		set 键名 值 //设置键名和值
		setex 键名 有效时间(秒) 值  //设置键名和值并且设置有效时间
		mset 键名1 值1 键名2 值2 ... //设置多个键名和值
		
	2) 获取值
		get 键名 //获取键名对应的字符串值
		mget 键名1 键名2.... //同时获取多个数据
		
	3) 运算
		数字的值才能进行运算
		incr 键名  //自增1 a++
		incrby 键名 数字 //将数字与键名进行相加 a+=10
		decr 键名 //自减1 a--
		decrby 键名 数字 //将数字从键名中减去 a-=10
		
	4) 其它
		append 键名 值 //在原有的值后面追加数据
		strlen 键名 //获取到值的长度
		
		注意：数字也是按字符的个数计算长度
		
2. 键命令
	keys 正则表达式 //查看键名
		keys * //查看所有键名
		
	exists 键名 //判断键名是否存在
	type 键名 //查看键名的类型
	del 键名 //删除键名
	expire 键名 时间 //设置有效期，单位秒
	ttl 键名 //查看键名的有效时间还剩余多少
	
3. 数据库
	默认数据库 0 -- 15 的数字
	select 下标 //切换数据库
	
4. 对象 hash
	1) 设置
		hset 键名 对象键名 对象值
			obj={"name":"张三"}
		hmset 键名 对象键名 对象值 对象键名 对象值 ... //设置一个名称对应一个对象，对象里面有多个键值对
	
	2) 获取
		hget 键名 对象键名 //获取对象的一个值
		hmget 键名 对象键名1 对象键名2 对象键名n //获取指定的多个键名对应的值
		hgetall 键名 //获取键中的所有属性和值
		hkeys 键名 //获取对象所有的属性
		hvals 键名 //获取对象所有的值
		hlen 键名 //获取对象的属性值个数
		
	3) 其它
		hexists 键名 对象键名  //判断对象中是否存在某个属性
		hdel 键名 对象键名  //删除对象中的属性
		hstrlen 键名 对象键名  //返回某个属性值的长度
		
5. 列表 list
	1) 设置
		lpush 键名 值1 值2 值3 ... //从左边插入数据到列表中
		rpush 键名 值1 值n ... //从右边（后边）插入数据到列表中
		linsert 键名 before|after 目标数据 新数据 //在中间元素的前面或后面插入数据
		lset 键名 索引 新的值   //将指定索引的值修改成新的值
		
	2) 获取
		lrange 键名 开始位置 结束位置 //查看指定区间的所有数据，通常使用：
			lrange 键名 0 -1 （查看全部数据）
			
		lpop 键名   //删除并返回第一个值
		rpop 键名   //删除并返回最后一个值
		
	3) 其它
		llen 键名  //返回列表的元素个数
		lindex 键名 索引  //返回指定索引的值
		ltrim 键名 起始索引 结束索引  //裁剪原来的列表
		
6. 无序集合 set
	元素为string类型，元素具有唯一性，不重复

	1) 设置
		sadd 键名 值1 值2 值n    //添加数据到无序集合
		
	2) 获取
		smembers 键名   //查看无序集合中的所有元素
		scard 键名  //查看无序集合的元素个数
		
	3) 其它
		sinter 键名1 键名2   //计算多个集合的交集
		sunion 键名1 键名2   //计算多个集合的并集
		sdiff 键名1 键名2   //计算某个集合与其它集合的差集
		sismember 键名 值   //判断某个值是否在集合中
		
7. 有序集合 zset
	元素为string类型，元素具有唯一性，不重复。 添加一个double类型的 score用于排序，从小到大
	
	1) 设置
		zadd 键名 score1 值1 score2 值2  //添加有序集合
		
	2) 获取
		zrange 键名 起始 结束  //获取指定下标区间的集合元素
		zcard 键名   //获取元素个数
		zcount 键名 score1 score2 //统计权重值区间的元素个数
		zscore 键名 值   //返回值的权重
		
			
		
		
		
		
		
	
	
