"""
类的定义方式有两种:
新式类和经典类，上面的是class Animal(object):则为新式类.
如果是class Animal:经典类,但这种编程方式已经严重不推荐使用。
任何时候，如果没有合适的类可以继承，就继承自object类。

1.父类中的私有方法,私有属性,不会被子类继承
2.可以调用父类上的方法,间接的访问私有属性和私有方法
通过函数dir(类名)查看所有可以访问的方法,python解析器将私有方法的名称偷偷的的修改了(_类名__方法名()),所有我们通过原来的方法名去访问可定是访问不到的.
"""
"""
重写:
    子类中出现了和父类名字一样的成员(属性和方法)，子类的成员就重写了父类成员
    子类对象如果存在相应的成员就不会再去父类中查找
    父类的方法一旦被子类重写，子类对象就不会自动去找父类方法执行，在子类方法中可以通过super().父类方法名() 来访问到被重写的父类方法。
    
    1.继承体系中经常都需要重写初始化方法__init__(),因为子类中通常具有与父类中不同的特殊属性
    2.工作中,如果类的某个方法不满足我们的需求,但是又在其他地方被调用了,这个时候我们就可以通过在子类中重写父类方法实现(多态)
"""
"""
多态:
    我们不用管方法或者函数传递过来实际参数的类型，而是依赖文档、清晰的代码和测试来确保正确使用，那么这个实际参数就是正确的（符合面向对象的核心思想）。
    在python语法中，可以在多个子类中重写父类的方法，这个时候所有的子类和父类中虽然都有相同名字的方法，但是实现的效果是不同的，这就是多态。
"""