"""
__init__()
什么是初始化方法:
概念:__init__()叫作对象的初始化方法,在创建对象的时候自动调用执行.在类中定义,名字固定
执行时机：在创建对象的时候自动调用执行
作用:我们可以实现该方法,并且在该方法中进行初始化工作(例如:定义属性和设置属性值)
语法：
    class 类名:
        def __init__(self[,参数列表]):

1.__init__(self)除了默认参数self，还可以设置任意个数的⾃定义参数
例 如:	__init__(self,x,y,z)
2.__init__()⽅法设置的⾃定义参数必须和创建对象时传递的参数保持⼀致
例如:	stu_a = Student(x,y,z)
创建对象时候传的实际参数其实就是传递给 __init__()方法的

初始化工作：
    我们通过类创建出来的对象都是一样的，为了区分每个对象的不同我们可以在对象创建之后为每个对象上面的属性设置不同的值。那么这个过程就叫做初始化工作。
"""
"""
什么是__str__方法:
    1.如果直接print(object)打印对象，会看到创建出来的对象在内存中的地址
    2.当使⽤	print(object)	输出对象的时候，只要对象的类中定义了	__str__(self)	⽅法，就会打印该⽅法 return的信息描述
    3.在python中⽅法名如果是__xxxx__()的，那么就有特殊的功能，因此叫做“魔法”⽅法
    注意:
        1.名称固定: __str__()
        2.执行时机: 使用print()打印一个对象时，被python自动调用执行。
        3.作用:返回对象的描述信息
        4.不能自定义参数
"""
"""
del()方法:
    在类中定义了一个固定名字的方法，该名字为__del__(不能够使别的名字)
    执行时机: __del__()所在的对象空间从内存中销毁时，被python解释器自动调用执行。
    该方法和__init__ () 是对立存在的。
    格式：
        def  __del__ (self):
            //方法体，通常用来完成对象销毁前的清理任务
"""
"""
规范建议:
    1.类名首字母大写驼峰式命名方法
    2.属性首字母小写 小驼峰 或者 _ 分隔
        xxx_yyy   xxxYyy
    3.方法的名字首字母小写 小驼峰
__init__()是固定名字的初始化方法,新建对象的时候自动调用,用于属性的初始化
__str__()是固定名字,对象通过print()打印的时候自动调用,结果更加友好
"""
"""
面向对象三大特征：封装、继承、多态
"""